// server.js
const express = require('express')
const cors = require('cors')
const dotenv = require('dotenv')
const { Pool } = require('pg')
const authRoutes = require('./routes/authRoutes')
const productRoutes = require('./routes/productRoutes')
const tipsRoutes = require('./routes/tipsRoutes')
const weatherRoutes = require('./routes/weatherRoutes')
const profileRoutes = require('./routes/profileRoutes')
const geminiRoutes = require('./routes/geminiRoutes');

require('dotenv').config();


const app = express()

// Middleware
app.use(cors())
app.use(express.json())

// PostgreSQL Pool (–±—ñ—Ä –∂–µ—Ä–¥–µ “ì–∞–Ω–∞)
const pool = new Pool({
  connectionString: process.env.DATABASE_URL,
  ssl: {
    rejectUnauthorized: false, // Vercel, Railway “Ø—à—ñ–Ω “õ–∞–∂–µ—Ç –±–æ–ª—É—ã –º“Ø–º–∫—ñ–Ω
  },
})

// Pool-–¥—ã req —ñ—à—ñ–Ω–µ “õ–æ—Å—É (–±–∞—Ä–ª—ã“õ –º–∞—Ä—à—Ä—É—Ç—Ç–∞—Ä–¥–∞ “õ–æ–ª–∂–µ—Ç—ñ–º–¥—ñ –±–æ–ª—É “Ø—à—ñ–Ω)
app.use((req, res, next) => {
  req.pool = pool
  next()
})

// Routes
app.use('/api/auth', authRoutes)
app.use('/api/products', productRoutes)
app.use('/api/tips', tipsRoutes)
app.use('/api/weather', weatherRoutes)
app.use('/api/profile', profileRoutes)
app.use('/api/gemini', geminiRoutes);

// –¢–µ–∫—Å–µ—Ä—É “Ø—à—ñ–Ω
app.get('/', (req, res) => {
  res.send('üöÄ SmartFarmer —Å–µ—Ä–≤–µ—Ä—ñ –∂“±–º—ã—Å —ñ—Å—Ç–µ–ø —Ç“±—Ä!')
})


// –°–µ—Ä–≤–µ—Ä–¥—ñ —ñ—Å–∫–µ “õ–æ—Å—É
const PORT = process.env.PORT || 5000
app.listen(PORT, () => {
  console.log(`‚úÖ –°–µ—Ä–≤–µ—Ä –ø–æ—Ä—Ç—Ç–∞ —ñ—Å–∫–µ “õ–æ—Å—ã–ª–¥—ã: ${PORT}`)
})
